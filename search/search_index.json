{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MIND Docs","text":"<p>A simple self hosted reminder application that can send push notifications to your device. Set the reminder and forget about it!</p> <p>Getting started:</p> <ul> <li>Installation</li> <li>Setup After Installation</li> </ul> <p>General Information:</p> <ul> <li>API Docs</li> </ul>"},{"location":"#workings","title":"Workings","text":"<p>MIND can be used for sending notifications at the desired time. This can be a set time, like a yearly reminder for a birthday, or at a button click, to easily send a predefined notification when you want to.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Works cross-timezone</li> <li>Notifications are sent with second-precision</li> <li>Uses the apprise library, giving you 80+ platforms to send notifications to</li> <li>Easily manage the reminders with sorting options, search ability and color coding</li> <li>Docker image available</li> <li>Mobile friendly web-interface</li> <li>API available</li> </ul>"},{"location":"#planned-features","title":"Planned Features","text":"<p>You can see the planned features in the Project board.</p>"},{"location":"#contact","title":"Contact","text":"<ul> <li>For support, a discord server is available</li> <li>Alternatively, make an issue</li> </ul>"},{"location":"api/","title":"API","text":"<p>Coming soon</p>"},{"location":"installation/","title":"Installation","text":"<p>The recommended way to install MIND is using Docker. After installing MIND, it is advised to read the Setup After Installation page.</p> <p>NOTE: Make sure to set all time related settings (time, date, timezone, etc.) correct on your computer, as MIND depends on it to work correctly.</p>"},{"location":"installation/#docker","title":"Docker","text":"Docker CLIDocker Compose <p>The command to get the docker container running can be found below. Replace the timezone value (<code>TZ=</code>) to the TZ database name of your timezone. <pre><code>docker run -d \\\n--name mind \\\n-v mind-db:/app/db \\\n-e TZ=Europe/Amsterdam \\\n-p 8080:8080 \\\nmrcas/mind:latest\n</code></pre></p> <p>The contents of the <code>docker-compose.yml</code> file would look like below. Replace the timezone value (<code>TZ=</code>) to the TZ database name of your timezone. <pre><code>version: '3.3'\nservices:\n    mind:\n        container_name: mind\n        volumes:\n            - 'mind-db:/app/db'\n        environment:\n            - TZ=Europe/Amsterdam\n        ports:\n            - '8080:8080'\n        image: 'mrcas/mind:latest'\n</code></pre></p> <p>Information on how to change the port can be found on the Setup After Installation page.</p> <p>Using a named volume in docker requires you to create the volume before you can use it (see Named Volumes).</p>"},{"location":"installation/#named-volumes","title":"Named Volumes","text":"Docker CLIPortainer <pre><code>docker volume create mind-db\n</code></pre> <ul> <li>Open <code>Volumes</code></li> <li>Click <code>Add Volume</code></li> <li>Enter name matching the one you'll use in compose (<code>mind-db</code>, in the above provided command)</li> <li>Click <code>Create the volume</code></li> <li>Open <code>Stacks</code></li> <li>Create the stack with the named volume in it.</li> </ul> <p>Both of these options will create a named volume that you can then use in the command above. If you'd prefer to use a local folder on the host machine for storing config, Linux standards would suggest putting that in <code>/opt/application_name</code>, as the <code>/opt</code> directory is where program options should be stored.  In this case, you'd create the desired folder with something like <code>mkdir /opt/MIND/db</code>, and replace 'mind-db:/app/db' with '/opt/MIND/db:/app/db'.</p>"},{"location":"installation/#manual-install","title":"Manual Install","text":"<p>See below for installation instructions for your OS if you want to install it manually.</p> Linux / MacOSWindows <pre><code>sudo apt-get install git python3-pip\nsudo git clone https://github.com/Casvt/MIND.git /opt/MIND\ncd /opt/MIND\npython3 -m pip install -r requirements.txt\npython3 MIND.py\n</code></pre> <ol> <li>Install python in the Microsoft Store</li> <li>Install pip using these instructions</li> <li>Download the latest release</li> <li>Extract the ZIP file</li> <li>With the folder open, right click and select <code>Open in Terminal</code></li> <li>Type the following command: <pre><code>python3 -m pip install -r requirements.txt\n</code></pre></li> <li>Type the following command: <pre><code>python3 MIND.py\n</code></pre></li> </ol>"},{"location":"setup_after_installation/","title":"Setup After Installation","text":"<p>After installing MIND, you should have access to the web-ui. MIND needs some configuration in order for it to work properly.</p>"},{"location":"setup_after_installation/#port","title":"Port","text":"<p>The first thing to do is decide if you want to leave MIND running on the default port of <code>8080</code>. If you do, you can go to the next step. If you want to change the port, continue reading.</p> Docker CLIDocker ComposeManual Install <p>Alter the command to run the container and replace <code>-p 8080:8080</code> with <code>-p {PORT}:8080</code>, where <code>{PORT}</code> is the desired port (e.g. <code>-p 8009:8080</code>). Then run the container with the new version of the command.</p> <p>Alter the file to run the container and replace <code>- 8080:8080</code> with <code>- {PORT}:8080</code>, where <code>{PORT}</code> is the desired port (e.g. <code>- 8009:8080</code>). Then run the container with the new version of the file.</p> <p>Inside the <code>MIND.py</code> file at the top, you can set the port via the <code>PORT</code> variable. Change it from <code>PORT = '8080'</code> to <code>PORT = '{PORT}'</code>, where <code>{PORT}</code> is the desired port (e.g. <code>PORT = '8009'</code>). Then restart the application.</p>"},{"location":"setup_after_installation/#creating-an-account","title":"Creating an account","text":"<p>When accessing the web-ui, you'll be prompted to log in. Click on <code>Or create an account</code>, enter the desired username and password for the account and click <code>Create</code>. The account is created and can now be logged in with. The complete authentication process is local and no data is shared with any other service.</p>"},{"location":"setup_after_installation/#add-a-notification-service","title":"Add a notification service","text":"<p>A notification service is a way of sending a notification. For example an e-mail to a group of people or a PushBullet notification to a specific device. What the actual content of the notification is, is decided by the title and text of the reminder. The notification service only specifies in which way the title and text is sent. You set it up once, and then you can select it when creating a reminder. A notification service consists of a title (name) and an Apprise URL. See the Apprise URL documentation to learn how to make a valid Apprise URL.</p>"}]}